<idea-plugin>
    <id>io.intino.plugin</id>
    <name>Intino</name>
    <version>3.0.3</version>
    <vendor email="info@intino.io" url="http://www.intino.io">intino.io</vendor>

    <description><![CDATA[
        All that maven and gradle should be. Simple, easy to use, nothing intrusive.
    ]]></description>

    <depends>io.intino.tara</depends>
    <change-notes><![CDATA[

    ]]>
    </change-notes>
    <idea-version since-build="145"/>

    <extensions defaultExtensionNs="com.intellij">
        <runConfigurationProducer implementation="io.intino.plugin.project.run.IntinoConfigurationProducer"/>
        <configurationType implementation="io.intino.plugin.project.run.IntinoConfigurationType"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="io.intino.plugin.codeinsight.linemarkers.RunLineMarkerProvider"/>
        <fileDocumentManagerListener
                implementation="io.intino.plugin.toolwindows.project.FileDocumentManagerListener"/>
        <annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.DependencyAnnotator"/>
        <annotator language="Tara"
                   implementationClass="io.intino.plugin.codeinsight.annotators.BoxVersionAnnotator"/>
        <annotator language="Tara"
                   implementationClass="io.intino.plugin.codeinsight.annotators.PackageParametersAnnotator"/>
        <annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.MainClassAnnotator"/>
        <annotator language="Tara"
                   implementationClass="io.intino.plugin.codeinsight.annotators.LanguageDeclarationAnnotator"/>
        <annotator language="Tara"
                   implementationClass="io.intino.plugin.codeinsight.annotators.DuplicatedRepositoryAnnotator"/>
        <projectService serviceInterface="io.intino.plugin.settings.IntinoSettings"
                        serviceImplementation="io.intino.plugin.settings.IntinoSettings"/>
        <projectConfigurable instance="io.intino.plugin.settings.IntinoSettingsComponent"/>
        <fileDocumentManagerListener
                implementation="io.intino.plugin.project.ConfigurationListener"/>
        <fileTypeFactory implementation="io.intino.plugin.file.IntinoFileTypeFactory"/>
        <errorHandler implementation="io.intino.plugin.errorreporting.LegioErrorReportSubmitter"/>
        <copyPastePreProcessor implementation="io.intino.plugin.file.legio.LegioDependencyPasteProcessor"/>
        <problemFileHighlightFilter
                implementation="io.intino.plugin.codeinsight.annotators.LegioProblemFileHighlightFilter"/>
        <moduleBuilder builderClass="io.intino.plugin.project.IntinoModuleBuilder"/>
        <completion.contributor language="Tara"
                                implementationClass="io.intino.plugin.codeinsight.completion.LegioCompletionContributor"/>
    </extensions>

    <actions>
        <group id="intino" text="Intino" popup="true" class="io.intino.plugin.actions.IntinoActionGroup">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>

        <action id="IntinoGenerate" class="io.intino.plugin.actions.IntinoGenerationAction"
                text="Generate intino code"
                icon="/icons/generate-16.png"
                description="generates all intino source code">
            <keyboard-shortcut first-keystroke="control alt G" keymap="$default"/>
            <add-to-group group-id="ToolbarMakeGroup" anchor="first"/>
        </action>
        <action id="PurgeAndReloadConfigurationAction"
                class="io.intino.plugin.actions.PurgeAndReloadConfigurationAction"
                text="Purge and reload Legio Configuration"
                description="Purge and reload configuration of project modules">

        </action>
        <action id="ReloadConfigurationAction"
                class="io.intino.plugin.actions.ReloadConfigurationAction" text="Reload Legio Configuration"
                description="Reload configuration of project modules">
            <keyboard-shortcut first-keystroke="control alt E" keymap="$default"/>
            <!--<add-to-group group-id="intino"/>-->
        </action>
        <action id="JoinToLegio" class="io.intino.plugin.actions.JoinToLegioAction"
                text="Join to Intino"
                description="Join module to legio or convert from maven">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>

        <action id="io.intino.plugin.actions.SubmitFeedbackAction"
                class="io.intino.plugin.actions.SubmitFeedbackAction"
                text="Submit Tara Feedback" description="You can report a bug or suggestion of plugin">
            <add-to-group group-id="HelpMenu" anchor="before" relative-to-action="TechnicalSupport"/>
        </action>
    </actions>

    <application-components>
        <component>
            <implementation-class>io.intino.plugin.project.LegioAppComponent</implementation-class>
        </component>
    </application-components>
    <project-components>
        <component>
            <implementation-class>io.intino.plugin.settings.IntinoSettingsComponent</implementation-class>
        </component>
        <component>
            <implementation-class>io.intino.plugin.toolwindows.project.IntinoFactoryComponent</implementation-class>
        </component>
        <component>
            <implementation-class>io.intino.plugin.toolwindows.console.ConsoleWindowComponent</implementation-class>
        </component>
        <component>
            <implementation-class>io.intino.plugin.toolwindows.store.IntinoStoreComponent</implementation-class>
        </component>
        <component>
            <implementation-class>io.intino.plugin.toolwindows.dependencytree.DependencyTreeComponent
            </implementation-class>
        </component>
    </project-components>
</idea-plugin>