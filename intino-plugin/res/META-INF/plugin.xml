<idea-plugin>
	<id>io.intino.plugin</id>
	<name>Intino</name>
	<version>8.1.0</version>
	<category>Build Tools</category>
	<vendor email="info@intino.io" url="https://www.intino.io">intino.io</vendor>
	<depends>com.intellij.modules.java</depends>
	<depends>com.intellij.modules.vcs</depends>
	<depends>org.jetbrains.idea.maven</depends>
	<depends>org.jetbrains.plugins.terminal</depends>
	<depends>com.intellij.uiDesigner</depends>
	<depends>Git4Idea</depends>

	<description><![CDATA[
        intino integrates several tools for automated software solutions development and deployment. It supports the creation of software production lines that involves:
        platform and product modeling, a layered architecture (including graphical user interface, rest services, persistence, event sourcing...) and continuous integration based on both source code and artifact repositories.
        intino provides several Domain Specific Languages (dsl): proteo dsl for product modeling, meta dsl for platform modeling,
        konos dsl for layered architecture modeling and legio dsl for continuous integration modeling.
    ]]></description>
	<change-notes>
		Now DSLs are reflected in Legio configuration.
		In addition, are presented new file icons and unified builder interface. for all of them
	</change-notes>

	<idea-version since-build="241.9959.31"/>
	<extensions defaultExtensionNs="com.intellij">
		<fileType name="Tara" language="Tara" extensions="tara" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.lang.file.TaraFileType"/>
		<fileType name="Stash" extensions="stash" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.lang.file.StashFileType"/>
		<fileType name="Legio" language="Tara" extensions="legio" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.file.LegioFileType"/>
		<fileType name="Itrules" language="Itrules" extensions="itr" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.file.ItrulesFileType"/>
		<fileType name="Konos" language="Tara" extensions="konos" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.file.KonosFileType"/>
		<fileType name="Goros" language="XML" extensions="goros" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.file.GorosFileType"/>
		<fileType name="Archetype" language="Archetype" extensions="archetype" fieldName="INSTANCE"
				  implementationClass="io.intino.plugin.file.ArchetypeFileType"/>

		<errorHandler implementation="io.intino.plugin.errorreporting.PluginErrorReportSubmitter"/>
		<treeStructureProvider implementation="io.intino.plugin.project.view.TaraTreeStructureProvider"/>
		<fileTemplateGroup implementation="io.intino.plugin.actions.utils.TaraTemplatesFactory"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraToNative"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.DuplicatedMograms"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraOverriddenNode"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraFacetOverriddenNode"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraOverriddenVariable"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraMethodSeparatorProvider"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.TaraNativeImplementationToJava"/>
		<codeInsight.lineMarkerProvider language="JAVA"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.JavaNativeImplementationToTara"/>
		<liveTemplateContext implementation="io.intino.plugin.codeinsight.livetemplates.TaraTemplateContext" contextId="Tara"/>
		<defaultLiveTemplates file="/livetemplates/var.xml"/>

		<gotoClassContributor implementation="io.intino.plugin.codeinsight.navigation.TaraGotoClassContributor"/>
		<gotoRelatedProvider implementation="io.intino.plugin.codeinsight.TaraRelatedFilesProvider"/>
		<problemFileHighlightFilter implementation="io.intino.plugin.codeinsight.TaraProblemFileHighlightFilter"/>
		<compileServer.plugin classpath="jps-plugin.jar"/>
		<notificationGroup id="Intino" displayType="BALLOON"/>
		<projectService serviceInterface="io.intino.plugin.lang.psi.TaraElementFactory"
						serviceImplementation="io.intino.plugin.lang.psi.impl.TaraElementFactoryImpl"/>
		<projectService serviceInterface="io.intino.plugin.codeinsight.JavaHelper"
						serviceImplementation="io.intino.plugin.codeinsight.JavaHelper$Impl"/>
		<projectStructureDetector implementation="io.intino.plugin.project.module.IntinoProjectStructureDetector"/>
		<lang.commenter language="Tara" implementationClass="io.intino.plugin.lang.TaraCommenter"/>
		<languageInjector implementation="io.intino.plugin.codeinsight.languageinjection.TaraLanguageInjector"/>

		<lang.documentationProvider language="Tara"
									implementationClass="io.intino.plugin.documentation.TaraDocumentationProvider"/>
		<lang.parserDefinition language="Tara"
							   implementationClass="io.intino.plugin.lang.parser.TaraParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Tara"
									   implementationClass="io.intino.plugin.highlighting.TaraSyntaxHighlighterFactory"/>
		<colorSettingsPage implementation="io.intino.plugin.highlighting.TaraColorSettingPage"/>

		<lang.braceMatcher language="Tara" implementationClass="io.intino.plugin.codeinsight.TaraBraceMatcher"/>
		<quoteHandler fileType="Tara" className="io.intino.plugin.codeinsight.TaraQuoteHandler"/>

		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.ReferenceAnnotator"/>
		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.DecorableAnnotator"/>
		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.ResourceAnnotator"/>
		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.MogramAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.DSLDeclarationAnnotator"/>
		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.RuleAnnotator"/>
		<!--		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.AnnotationsAnnotator"/>-->
		<annotator language="Tara" implementationClass="io.intino.plugin.codeinsight.annotators.RuleAnnotator"/>
		<iconProvider implementation="io.intino.plugin.IntinoIconProvider"/>
		<completion.contributor language="Tara"
								implementationClass="io.intino.plugin.codeinsight.completion.TaraNodeCompletionContributor"/>
		<completion.contributor language="Tara"
								implementationClass="io.intino.plugin.codeinsight.completion.TaraVariableCompletionContributor"/>
		<completion.contributor language="Tara"
								implementationClass="io.intino.plugin.codeinsight.completion.TaraAnnotationsCompletionContributor"/>
		<lang.psiStructureViewFactory language="Tara"
									  implementationClass="io.intino.plugin.structureview.StructureViewFactory"/>

		<nameSuggestionProvider implementation="io.intino.plugin.refactoring.TaraNameSuggestionProvider"/>
		<lang.elementManipulator forClass="io.intino.plugin.lang.psi.TaraIdentifier"
								 implementationClass="io.intino.plugin.lang.psi.impl.IdentifierManipulator"/>
		<lang.elementManipulator forClass="io.intino.plugin.lang.psi.Expression"
								 implementationClass="io.intino.plugin.lang.psi.TaraExpressionManipulator"/>
		<lang.elementManipulator forClass="io.intino.plugin.lang.psi.TaraHeaderReference"
								 implementationClass="io.intino.plugin.lang.psi.impl.UseReferenceManipulator"/>
		<codeInsight.parameterInfo language="Tara"
								   implementationClass="io.intino.plugin.codeinsight.parameterinfo.TaraParameterInfoHandler"/>
		<lang.refactoringSupport language="Tara"
								 implementationClass="io.intino.plugin.refactoring.TaraRefactoringSupportProvider"/>
		<renameHandler implementation="io.intino.plugin.refactoring.rename.RenameHandler"/>
		<renamePsiElementProcessor implementation="io.intino.plugin.refactoring.rename.TaraRenamePsiElementProcessor"/>
		<lang.findUsagesProvider language="Tara"
								 implementationClass="io.intino.plugin.lang.psi.resolve.TaraFindUsagesProvider"/>
		<lang.foldingBuilder language="Tara" implementationClass="io.intino.plugin.codefolding.TaraFoldingBuilder"/>

		<lang.importOptimizer language="Tara"
							  implementationClass="io.intino.plugin.codeinsight.imports.TaraImportOptimizer"/>
		<findUsagesHandlerFactory implementation="io.intino.plugin.findusage.TaraFindUsagesHandlerFactory" id="Tara"
								  order="last, before default"/>
		<codeStyleSettingsProvider implementation="io.intino.plugin.formatter.TaraCodeStyleSettingsProvider"/>
		<langCodeStyleSettingsProvider
				implementation="io.intino.plugin.formatter.TaraLanguageCodeStyleSettingsProvider"/>
		<postStartupActivity implementation="io.intino.plugin.project.module.IntinoModuleStarter"/>
		<applicationInitializedListener implementation="io.intino.plugin.project.ApplicationInitializedListener"/>
		<!--<statementUpDownMover implementation="TaraNodeMover" id="node" order="before line"/>-->
		<!--<psi.referenceContributor implementation="io.intino.plugin.model.psi.resolve.TaraReferenceContributor"/>-->
		<!--<referenceImporter implementation="TaraReferenceImporter"/>-->
		<!--<lang.formatter language="Tara" implementationClass="tara.intellij.formatter.TaraFormattingModelBuilder"/>-->

		<gotoClassContributor implementation="io.intino.plugin.codeinsight.navigation.TaraGotoClassContributor"/>
		<spellchecker.support language="Tara"
							  implementationClass="io.intino.plugin.codeinsight.spelling.TaraSpellcheckerStrategy"/>

		<externalProjectDataService implementation="io.intino.plugin.project.configuration.external.LegioProjectDataService"/>
		<externalProjectDataService implementation="io.intino.plugin.project.configuration.external.LegioModuleDataService"/>
		<externalProjectDataService implementation="io.intino.plugin.project.configuration.external.LegioLibraryDataService"/>
		<externalProjectDataService implementation="io.intino.plugin.project.configuration.external.SourceSetDataService"/>
		<projectImportBuilder implementation="io.intino.plugin.project.configuration.external.IntinoProjectImportBuilder"/>
		<projectImportProvider implementation="io.intino.plugin.project.configuration.external.IntinoProjectImportProvider"/>
		<externalIconProvider implementationClass="io.intino.plugin.project.configuration.external.IntinoIconProvider"/>
		<externalSystemManager implementation="io.intino.plugin.project.configuration.external.IntinoExternalSystemManager"/>

		<spellchecker.bundledDictionaryProvider
				implementation="io.intino.plugin.codeinsight.spelling.TaraDictionaryProvider"/>
		<extendWordSelectionHandler implementation="io.intino.plugin.archetype.lang.psi.ArchetypeSelectionHandler"/>
		<extendWordSelectionHandler implementation="io.intino.plugin.lang.psi.TaraSelectionHandler"/>
		<basicWordSelectionFilter implementation="io.intino.plugin.lang.psi.TaraBasicWordSelectionFilter"/>
		<moduleType id="TARA_MODULE" implementationClass="io.intino.plugin.project.module.IntinoModuleType"/>
		<httpRequestHandler implementation="io.intino.plugin.codeinsight.linemarkers.konos.WebModelingServer"/>
		<runConfigurationProducer implementation="io.intino.plugin.project.run.IntinoConfigurationProducer"/>
		<codeInsight.lineMarkerProvider language="Tara"
										implementationClass="io.intino.plugin.codeinsight.linemarkers.RunLineMarkerProvider"/>
<!--		<codeInsight.lineMarkerProvider language="Tara"-->
<!--										implementationClass="io.intino.plugin.codeinsight.linemarkers.konos.ProcessLineMarkerProvider"/>-->
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.DependencyAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.ArchetypeAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.DataHubAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.IntinoPluginAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.ArtifactParametersAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.ArtifactParameterAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.RunConfigurationAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.MainClassAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.ArtifactDslAnnotator"/>
		<annotator language="Tara"
				   implementationClass="io.intino.plugin.codeinsight.annotators.legio.DuplicatedRepositoryAnnotator"/>
		<intentionAction>
			<language>JAVA</language>
			<className>io.intino.plugin.codeinsight.intentions.RemoveFromLocalRepository</className>
			<category>Remove version from local repository</category>
			<descriptionDirectoryName>RemoveFromLocalRepository</descriptionDirectoryName>
		</intentionAction>
		<projectService serviceImplementation="io.intino.plugin.settings.IntinoSettings"/>
		<projectService serviceImplementation="io.intino.plugin.project.configuration.external.settings.IntinoSettings"/>
		<projectService serviceImplementation="io.intino.plugin.project.configuration.external.settings.IntinoLocalSettings"/>
		<projectService serviceImplementation="io.intino.plugin.cesar.CesarInfo"/>
		<projectConfigurable id="io.intino.plugin.settings.IntinoSettingsComponent"
							 displayName="Intino Settings"
							 instance="io.intino.plugin.settings.IntinoSettingsComponent"/>
		<attachSourcesProvider
				implementation="io.intino.plugin.codeinsight.notifications.AttachSourcesFromExternalArtifactoryProvider"/>

		<!--		<fileTypeFactory implementation="io.intino.plugin.file.IntinoFileTypeFactory"/>-->
		<errorHandler implementation="io.intino.plugin.errorreporting.LegioErrorReportSubmitter"/>
		<copyPastePreProcessor implementation="io.intino.plugin.file.LegioDependencyPasteProcessor"/>
		<problemFileHighlightFilter
				implementation="io.intino.plugin.codeinsight.annotators.legio.LegioProblemFileHighlightFilter"/>
		<moduleBuilder builderClass="io.intino.plugin.project.module.NewIntinoModuleBuilder"/>
		<completion.contributor language="Tara"
								implementationClass="io.intino.plugin.codeinsight.completion.LegioCompletionContributor"/>
		<consoleActionsPostProcessor implementation="io.intino.plugin.toolwindows.remote.ConsoleActionsProcessor"/>
		<lang.parserDefinition language="Itrules"
							   implementationClass="io.intino.plugin.itrules.lang.parser.ItrulesParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Itrules"
									   implementationClass="io.intino.plugin.itrules.highlighting.ItrulesSyntaxHighlighterFactory"/>
		<lang.braceMatcher language="Itrules"
						   implementationClass="io.intino.plugin.itrules.highlighting.ItrulesBraceMatcher"/>
		<lang.parserDefinition language="Archetype"
							   implementationClass="io.intino.plugin.archetype.lang.parser.ArchetypeParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Archetype"
									   implementationClass="io.intino.plugin.archetype.highlighting.ArchetypeSyntaxHighlighterFactory"/>
		<treeStructureProvider implementation="io.intino.plugin.itrules.project.view.ItrulesTreeStructureProvider"/>
		<!--        <webBrowserUrlProvider implementation="io.intino.plugin.codeinsight.linemarkers.WebBrowserProvider"/>-->
		<toolWindow id="Intino Remote"
					icon="/icons/intino/intino-13-purple.png"
					anchor="bottom"
					factoryClass="io.intino.plugin.toolwindows.remote.RemoteWindowFactory"/>
		<toolWindow id="Cosmos Bot"
					icon="/icons/intino/cosmos-13.png"
					anchor="bottom"
					factoryClass="io.intino.plugin.toolwindows.cesarbot.CesarBotWindowFactory"/>
		<toolWindow id="Intino Factory"
					icon="/icons/intino/intino-13.png"
					anchor="right"
					factoryClass="io.intino.plugin.toolwindows.factory.IntinoFactoryWindowFactory"/>
		<toolWindow id="Intino Dependencies"
					icon="/icons/intino/intino-13-grey.png"
					anchor="right"
					factoryClass="io.intino.plugin.toolwindows.dependencytree.DependencyTreeWindowFactory"/>
		<toolWindow id="Intino Metamodel"
					icon="/icons/intino/intino-13-orange.png"
					anchor="bottom"
					factoryClass="io.intino.plugin.toolwindows.metamodel.IntinoMetamodelWindowFactory"/>

		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.FromBodyToExplicitParameters</className>
			<category>Move To parameters</category>
			<descriptionDirectoryName>FromBodyToExplicitParameters</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.InlineToIndentConverter</className>
			<category>Indent operator</category>
			<descriptionDirectoryName>InlineToIndentConverter</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.ConvertToMethodReference</className>
			<category>Extract To method object</category>
			<descriptionDirectoryName>ConvertToMethodReference</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.IndentToInlineConverter</className>
			<category>Indent operator</category>
			<descriptionDirectoryName>IndentToInlineConverter</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.ImplicitToExplicitParameters</className>
			<category>Parameter view operator</category>
			<descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.ExplicitToImplicitParameters</className>
			<category>Parameter view operator</category>
			<descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.ToBodyParameters</className>
			<category>Parameter view operator</category>
			<descriptionDirectoryName>ToBodyParameters</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.InlineToMultiline</className>
			<category>String view operator</category>
			<descriptionDirectoryName>InlineToMultiline</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<language>Tara</language>
			<className>io.intino.plugin.codeinsight.intentions.MultilineToInline</className>
			<category>String view operator</category>
			<descriptionDirectoryName>MultilineToInline</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>io.intino.plugin.codeinsight.intentions.EditElementDocumentation</className>
			<category>Set documentation</category>
			<descriptionDirectoryName>EditElementDocumentation</descriptionDirectoryName>
		</intentionAction>
<!--		<intentionAction>-->
<!--			<className>io.intino.plugin.codeinsight.intentions.CreateI18Value</className>-->
<!--			<category>Create i18 value</category>-->
<!--			<descriptionDirectoryName>CreateI18Value</descriptionDirectoryName>-->
<!--		</intentionAction>-->
		<intentionAction>
			<language>JAVA</language>
			<className>io.intino.plugin.codeinsight.intentions.SyncNativeWithTara</className>
			<category>Sync native With tara</category>
			<descriptionDirectoryName>SyncNativeWithTara</descriptionDirectoryName>
		</intentionAction>
	</extensions>
	<applicationListeners>
		<listener class="io.intino.plugin.itrules.project.FileListener"
				  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
		<listener class="io.intino.plugin.project.FileListener"
				  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
	</applicationListeners>
	<projectListeners>
		<listener class="io.intino.plugin.build.git.GitListener"
				  topic="com.intellij.notification.Notifications"/>
		<listener class="io.intino.plugin.build.DslCompilerListener"
				  topic="com.intellij.compiler.server.CustomBuilderMessageHandler"/>
		<listener class="io.intino.plugin.codeinsight.languageinjection.imports.ImportsSaverService"
				  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
		<listener class="io.intino.plugin.project.module.IntinoModuleStarter"
				  topic="com.intellij.openapi.project.ModuleListener"/>
		<listener class="io.intino.plugin.project.configuration.ConfigurationListener"
				  topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
		<listener class="io.intino.plugin.actions.itrules.ItrFileDocumentManagerListener"
				  topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
		<listener class="io.intino.plugin.codeinsight.languageinjection.JavaFragmentDocumentManagerListener"
				  topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
	</projectListeners>

	<actions>
		<group id="GorosMenu" text="Goros" description="Goros menu">
			<add-to-group group-id="ToolsMenu" anchor="last"/>
		</group>
		<action id="goros.toClass" class="io.intino.plugin.actions.ModernizationGeneration"
				text="Modernize Module"
				description="Modernize the project from old platform to intino">
			<add-to-group group-id="GorosMenu" anchor="last"/>
			<add-to-group group-id="EditorPopupMenu" anchor="last"/>
			<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
		</action>
		<action id="NewPackage" class="io.intino.plugin.actions.CreatePackageAction" text="Package"
				description="Create a new package" icon="AllIcons.Nodes.Package"/>
		<group id="intino" text="Intino" popup="true" class="io.intino.plugin.actions.IntinoActionGroup">
			<add-to-group group-id="ToolsMenu" anchor="last"/>
		</group>
		<action id="NewTaraFile" class="io.intino.plugin.actions.CreateDslFileAction">
			<add-to-group group-id="NewGroup" anchor="first"/>
		</action>
		<action id="PurgeAndReloadConfigurationAction"
				class="io.intino.plugin.actions.PurgeAndReloadConfigurationAction"
				text="Purge and Reload Legio Configuration"
				description="Purge and reload configuration of project modules">
		</action>
		<action id="UpdateVersionPropagationAction"
				class="io.intino.plugin.actions.UpdateVersionPropagationAction"
				text="Update Versions of Module Dependencies"
				description="Update versions module dependencies">
			<keyboard-shortcut keymap="$default" first-keystroke="control alt U"/>
			<add-to-group group-id="intino" anchor="before" relative-to-action="TechnicalSupport"/>
		</action>
		<action id="UpdateVersionPropagationInAllModulesAction"
				class="io.intino.plugin.actions.UpdateVersionPropagationInAllModulesAction"
				text="Update Dependency Versions of All Modules"
				description="Update dependency versions of all modules ">
			<keyboard-shortcut keymap="$default" first-keystroke="shift control alt U"/>
			<add-to-group group-id="intino" anchor="before" relative-to-action="TechnicalSupport"/>
		</action>
		<action id="ReloadConfigurationAction"
				class="io.intino.plugin.actions.ReloadConfigurationAction" text="Reload Legio Configuration"
				description="Reload configuration of project modules">
			<keyboard-shortcut first-keystroke="control alt E" keymap="$default"/>
			<add-to-group group-id="intino"/>
		</action>
		<action id="IntinoGenerate"
				class="io.intino.plugin.actions.export.BoxElementsGenerationAction"
				text="Generate Web Elements Code"
				description="Generates web elements code">
			<keyboard-shortcut first-keystroke="control alt K" keymap="$default"/>
			<add-to-group group-id="ToolbarMakeGroup" anchor="first"/>
		</action>
		<action id="JoinToLegio" class="io.intino.plugin.actions.JoinToLegioAction"
				text="Join to Intino"
				description="Join module to legio or convert from maven">
			<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
		</action>

		<action id="ArchetypeGeneration"
				class="io.intino.plugin.actions.ArchetypeGeneration"
				text="Generates Archetype Code"
				description="Generates archetype">
			<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
			<keyboard-shortcut first-keystroke="control alt k" keymap="$default"/>
		</action>

		<action id="io.intino.plugin.actions.SubmitFeedbackAction"
				class="io.intino.plugin.actions.SubmitFeedbackAction"
				text="Submit Tara Feedback" description="You can report a bug or suggestion of plugin">
			<add-to-group group-id="HelpMenu" anchor="before" relative-to-action="TechnicalSupport"/>
		</action>

		<action id="NewItrFile" class="io.intino.plugin.actions.itrules.CreateItrFileAction">
			<add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewFile"/>
		</action>

		<group id="ItrulesMenu" text="Itrules" description="Itrules menu">
			<action id="itrules.toClass" class="io.intino.plugin.actions.itrules.TemplateGeneration"
					text="Generate Java Template"
					description="Generates the corresponding Java representation of the template">
				<keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>
				<add-to-group group-id="EditorPopupMenu" anchor="last"/>
				<add-to-group group-id="ToolsMenu" anchor="last"/>
			</action>
			<action id="itrules.migrate" class="io.intino.plugin.actions.itrules.UpgradeTemplateAction"
					text="Upgrade Template from Itrules to Last Version"
					description="Upgrades the sintax of the itrules language to last specification">
				<add-to-group group-id="EditorPopupMenu" anchor="last"/>
				<add-to-group group-id="ToolsMenu" anchor="last"/>
			</action>
		</group>
	</actions>

</idea-plugin>