package io.intino.plugin.build.maven;

import io.intino.itrules.RuleSet;
import io.intino.itrules.Template;

public class ActivityPomTemplate extends Template {

	public RuleSet ruleSet() {
		return new RuleSet().add(
			rule().condition((type("pom"))).output(literal("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\t\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>")).output(mark("groupId", "lowercase")).output(literal("</groupId>\n\t<artifactId>")).output(mark("artifactId", "lowercase")).output(literal("</artifactId>\n\t<version>")).output(mark("version")).output(literal("</version>\n\t")).output(expression().output(literal("<licenses>")).output(literal("\n")).output(literal("\t\t")).output(mark("license").multiple("\n")).output(literal("\n")).output(literal("\t</licenses>"))).output(literal("\n\n\t<properties>\n\t\t<maven.compiler.source>1.8</maven.compiler.source>\n\t\t<maven.compiler.target>1.8</maven.compiler.target>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t</properties>\n\n\t<build>\n\t\t<outputDirectory>")).output(mark("outDirectory")).output(mark("artifactId", "lowercase")).output(literal("</outputDirectory>\n\t\t<directory>")).output(mark("buildDirectory")).output(mark("artifactId", "lowercase")).output(literal("</directory>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>build-helper-maven-plugin</artifactId>\n\t\t\t\t<version>1.7</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>add-source</id>\n\t\t\t\t\t\t<phase>generate-sources</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>add-source</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sources>\n\t\t\t\t\t\t\t\t<source>./src/widgets/</source>\n\t\t\t\t\t\t\t</sources>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n\t\t\t\t<version>3.0.1</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>attach-sources</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>jar-no-fork</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t\t<configuration>\n\t\t\t\t\t<useDefaultExcludes>false</useDefaultExcludes>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\t<distributionManagement>\n\t\t")).output(mark("repository", "distribution").multiple("\n")).output(literal("\n\t</distributionManagement>\n</project>")),
			rule().condition((type("repository")), (type("distribution")), (trigger("distribution"))).output(literal("<repository>\n\t<id>")).output(mark("name")).output(literal("</id>\n\t<name>")).output(mark("name")).output(literal("</name>\n\t<url>")).output(mark("url")).output(literal("</url>\n</repository>"))
		);
	}
}