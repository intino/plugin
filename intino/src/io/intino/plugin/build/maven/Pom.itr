def type(pom)
	<?xml version="1.0" encoding="UTF-8"?>
	<project xmlns="http://maven.apache.org/POM/4.0.0"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
		<modelVersion>4.0.0</modelVersion>

		<groupId>$groupId+lowercase</groupId>
		<artifactId>$artifactId+lowercase</artifactId>
		<version>$version</version>
		[<licenses>
			$license...[$NL]
		</licenses>]

		<properties>
			<maven.compiler.source>$sdk</maven.compiler.source>
			<maven.compiler.target>$sdk</maven.compiler.target>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<sonar.language>java</sonar.language>
			<sonar.login></sonar.login>
			<sonar.password></sonar.password>
		</properties>

		<build>
			<testSourceDirectory>test</testSourceDirectory>
			<outputDirectory>$outDirectory</outputDirectory>
			<testOutputDirectory>$testOutDirectory</testOutputDirectory>
			<directory>$buildDirectory~$artifactId+lowercase</directory>
			[<resources>
				$resourceDirectory...[$NL]
			</resources>]
			[<testResources>
				$resourceTestDirectory...[$NL]
			</testResources>]
			<plugins>
			    <plugin>
                      <artifactId>maven-clean-plugin</artifactId>
                      <version>3.0.0</version>
                      <configuration>
                        <skip>true</skip>
                      </configuration>
                    </plugin>
			    [$compile<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <skipMain>true</skipMain>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>]
			    [
				$extractedLibraries
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<artifactSet>
									<excludes>
										<exclude>junit:junit</exclude>
										<exclude>jmock:*</exclude>
										<exclude>org.apache.maven:lib:tests</exclude>
									</excludes>
							  	</artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
							</configuration>
						</execution>
					</executions>
				</plugin>
				]<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						[<finalName>$finalName</finalName>]
						<archive>
							<manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addClasspath>[$linkLibraries?false]</addClasspath>[
								<mainClass>$mainClass</mainClass>]
								[$copyDependencies+classpath]
							</manifest>
							<manifestSections>
                                [<manifestSection>
                                    <name>parameters</name>
                                    <manifestEntries>
                                      $parameter...[$NL]
                                    </manifestEntries>
                                </manifestSection>]
                                [<manifestSection>
                                    <name>vmoptions</name>
                                    <manifestEntries>
                                        <value>$vmOptions</value>
                                    </manifestEntries>
                                </manifestSection>]
                            </manifestSections>
						</archive>
					</configuration>
				</plugin>
				[$copyDependencies]
				[
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									$sourceDirectory...[$NL]
									$moduleDependency...[$NL]
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>test-gen</source>
									$testModuleDependency...[$NL]
								</sources>
							</configuration>
							</execution>
					</executions>
				</plugin>]
				[$attachSources<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>]
				[$attachJavaDoc<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					</plugin>]
				[$osx]
				[$windows]
			</plugins>
		</build>


		<repositories>
			$repository+release...[$NL]
		</repositories>

		<distributionManagement>
			$repository+distribution...[$NL]
		</distributionManagement>

		<dependencies>
			$dependency...[$NL]
		</dependencies>
	</project>
end

def trigger(sourceDirectory)
	<source>$this</source>
end

def trigger(testModuleDependency)
	<source>$this</source>
end

def trigger(moduleDependency)
	<source>$this</source>
end


def trigger(resourceDirectory)
	<resource><directory>$this</directory></resource>
end

def trigger(resourceTestDirectory)
	<testResource><directory>$this</directory></testResource>
end

def type(repository) type(Distribution) trigger(distribution)
	<repository>
		<id>$name</id>
		<name>$name</name>
		<url>$url</url>
	</repository>
end

def trigger(distribution)
end

def type(repository) !type(Distribution) trigger(release)
	<repository>
		<id>$name~-$random</id>
		<url>$url</url>
	</repository>
end

def trigger(parameter)
    <_$key>$this[##$description]</_$key>
end

def type(dependency) trigger(dependency)
	<dependency>
		<groupId>$groupId</groupId>
		<artifactId>$artifactId</artifactId>
		<scope>$scope+lowercase</scope>
		<version>$version</version>
        [<exclusions>
		    $exclusion...[$NL]
        </exclusions>]
	</dependency>
end

def trigger(exclusion)
    <exclusion>
        <groupId>$groupId</groupId>
        <artifactId>$artifactId</artifactId>
    </exclusion>
end

def type(GPL) trigger(license)
	<license>
		<name>The GNU General Public License v3.0</name>
		<url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
	</license>
end

def type(BSD) trigger(license)
	<license>
		<name>BSD 3-Clause License</name>
		<url>https://opensource.org/licenses/BSD-3-Clause</url>
	</license>
end

def trigger(osx)
    <plugin>
        <groupId>sh.tak.appbundler</groupId>
        <artifactId>appbundle-maven-plugin</artifactId>
        <version>1.2.0</version>
        <configuration>
            <mainClass>$mainClass</mainClass>
            [<iconFile>$icon</iconFile>]
            <jvmVersion>1.8+</jvmVersion>
        </configuration>
        <executions>
            <execution>
                <phase>package</phase>
                <goals>
                    <goal>bundle</goal>
                </goals>
            </execution>
        </executions>
    </plugin>
end

def trigger(windows)
    <plugin>
        <groupId>com.akathist.maven.plugins.launch4j</groupId>
        <artifactId>launch4j-maven-plugin</artifactId>
        <executions>
            <execution>
            <id>l4j-clui</id>
            <phase>package</phase>
            <goals><goal>launch4j</goal></goals>
                <configuration>
                    <headerType>console</headerType>
                    <outfile>$out$${project.build.finalName}.exe</outfile>
                    <icon>$icon</icon>
                    <jar>$out$name+lowercase~/~$name+lowercase~-$version.jar</jar>
                    <errTitle>$name</errTitle>
                    <classPath>
                        <mainClass>$mainClass</mainClass>
                        <addDependencies>true</addDependencies>
                        <jarLocation>$prefix</jarLocation>
                    </classPath>
                    <jre>
                        <minVersion>1.8.0</minVersion>
                        <opts>
                            <opt>-Djava.endorsed.dirs=./endorsed</opt>
                        </opts>
                    </jre>
                    <versionInfo>
                        <fileVersion>$version.0</fileVersion>
                        <txtFileVersion>text</txtFileVersion>
                        <fileDescription>text</fileDescription>
                        <copyright>text</copyright>
                        <productVersion>$version.0</productVersion>
                        <txtProductVersion>text</txtProductVersion>
                        <productName>$name</productName>
                        <internalName>$name</internalName>
                        <originalFilename>$name.exe</originalFilename>
                    </versionInfo>
                </configuration>
            </execution>
        </executions>
    </plugin>
end

def type(copyDependencies) trigger(classpath)
    <classpathPrefix>[$classpathPrefix?dependency]/</classpathPrefix>
end

def trigger(copyDependencies)
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
            <execution>
                <id>copy-dependencies</id>
                <phase>package</phase>
                <goals>
                    <goal>copy-dependencies</goal>
                </goals>
                <configuration>[
                    <outputDirectory>$${project.build.directory}/$classpathPrefix</outputDirectory>]
                    <includeScope>runtime</includeScope>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
            </execution>
        </executions>
    </plugin>
end
