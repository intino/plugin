package io.intino.plugin.build.maven;

import org.siani.itrules.*;

import java.util.Locale;

import static org.siani.itrules.LineSeparator.*;

public class PomTemplate extends Template {

	protected PomTemplate(Locale locale, LineSeparator separator) {
		super(locale, separator);
	}

	public static Template create() {
		return new PomTemplate(Locale.ENGLISH, LF).define();
	}

	public Template define() {
		add(
			rule().add((condition("type", "pom"))).add(literal("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\t\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>")).add(mark("groupId", "lowercase")).add(literal("</groupId>\n\t<artifactId>")).add(mark("artifactId", "lowercase")).add(literal("</artifactId>\n\t<version>")).add(mark("version")).add(literal("</version>\n\t")).add(expression().add(literal("<licenses>")).add(literal("\n")).add(literal("\t\t")).add(mark("license").multiple("\n")).add(literal("\n")).add(literal("\t</licenses>"))).add(literal("\n\n\t<properties>\n\t\t<maven.compiler.source>")).add(mark("sdk")).add(literal("</maven.compiler.source>\n\t\t<maven.compiler.target>")).add(mark("sdk")).add(literal("</maven.compiler.target>\n\t\t")).add(expression().add(literal("<project.build.sourceEncoding>")).add(mark("encoding")).add(literal("</project.build.sourceEncoding>"))).add(literal("\n\t\t<sonar.language>java</sonar.language>\n\t\t<sonar.login></sonar.login>\n\t\t<sonar.password></sonar.password>\n\t</properties>\n\n\t<build>\n\t\t<testSourceDirectory>test</testSourceDirectory>\n\t\t<outputDirectory>")).add(mark("outDirectory")).add(literal("</outputDirectory>\n\t\t<testOutputDirectory>")).add(mark("testOutDirectory")).add(literal("</testOutputDirectory>\n\t\t<directory>")).add(mark("buildDirectory")).add(mark("artifactId", "lowercase")).add(literal("</directory>\n\t\t")).add(expression().add(literal("<resources>")).add(literal("\n")).add(literal("\t\t\t")).add(mark("resourceDirectory").multiple("\n")).add(literal("\n")).add(literal("\t\t</resources>"))).add(literal("\n\t\t")).add(expression().add(literal("<testResources>")).add(literal("\n")).add(literal("\t\t\t")).add(mark("resourceTestDirectory").multiple("\n")).add(literal("\n")).add(literal("\t\t</testResources>"))).add(literal("\n\t\t<plugins>\n\t\t    <plugin>\n                  <artifactId>maven-clean-plugin</artifactId>\n                  <version>3.0.0</version>\n                  <configuration>\n                    <skip>true</skip>\n                  </configuration>\n                </plugin>\n\t\t    ")).add(expression().add(mark("compile")).add(literal("<plugin>")).add(literal("\n")).add(literal("                <groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("                <artifactId>maven-compiler-plugin</artifactId>")).add(literal("\n")).add(literal("                <version>3.6.2</version>")).add(literal("\n")).add(literal("                <executions>")).add(literal("\n")).add(literal("                    <execution>")).add(literal("\n")).add(literal("                        <id>default-compile</id>")).add(literal("\n")).add(literal("                        <phase>compile</phase>")).add(literal("\n")).add(literal("                        <goals>")).add(literal("\n")).add(literal("                            <goal>compile</goal>")).add(literal("\n")).add(literal("                        </goals>")).add(literal("\n")).add(literal("                        <configuration>")).add(literal("\n")).add(literal("                            <skipMain>true</skipMain>")).add(literal("\n")).add(literal("                        </configuration>")).add(literal("\n")).add(literal("                    </execution>")).add(literal("\n")).add(literal("                </executions>")).add(literal("\n")).add(literal("            </plugin>"))).add(literal("\n\t\t    ")).add(expression().add(literal("\n")).add(literal("\t\t\t")).add(mark("extractedLibraries")).add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-shade-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>3.1.0</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<phase>package</phase>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>shade</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<artifactSet>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t<excludes>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t\t<exclude>junit:junit</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t\t<exclude>jmock:*</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t\t<exclude>org.apache.maven:lib:tests</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t</excludes>")).add(literal("\n")).add(literal("\t\t\t\t\t\t  \t</artifactSet>")).add(literal("\n")).add(literal("                        <filters>")).add(literal("\n")).add(literal("                            <filter>")).add(literal("\n")).add(literal("                                <artifact>*:*</artifact>")).add(literal("\n")).add(literal("                                <excludes>")).add(literal("\n")).add(literal("                                    <exclude>META-INF/*.SF</exclude>")).add(literal("\n")).add(literal("                                    <exclude>META-INF/*.DSA</exclude>")).add(literal("\n")).add(literal("                                    <exclude>META-INF/*.RSA</exclude>")).add(literal("\n")).add(literal("                                </excludes>")).add(literal("\n")).add(literal("                            </filter>")).add(literal("\n")).add(literal("                        </filters>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(literal("<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t<version>2.6</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t")).add(expression().add(literal("<finalName>")).add(mark("finalName")).add(literal("</finalName>"))).add(literal("\n\t\t\t\t\t<archive>\n\t\t\t\t\t\t<manifest>\n\t\t\t\t\t\t\t<addClasspath>")).add(expression().add(mark("linkLibraries")).or(expression().add(literal("false")))).add(literal("</addClasspath>")).add(expression().add(literal("\n")).add(literal("\t\t\t\t\t\t\t<mainClass>")).add(mark("mainClass")).add(literal("</mainClass>"))).add(literal("\n\t\t\t\t\t\t\t<classpathPrefix>")).add(expression().add(mark("classpathPrefix")).or(expression().add(literal("dependency")))).add(literal("/</classpathPrefix>\n\t\t\t\t\t\t</manifest>\n\t\t\t\t\t\t")).add(expression().add(literal("<manifestEntries>")).add(literal("\n")).add(literal("                          ")).add(mark("parameter").multiple("\n")).add(literal("\n")).add(literal("                        </manifestEntries>"))).add(literal("\n\t\t\t\t\t</archive>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-dependency-plugin</artifactId>\n\t\t\t\t<version>2.10</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>copy-dependencies</id>\n\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>copy-dependencies</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>")).add(expression().add(literal("\n")).add(literal("\t\t\t\t\t\t    <outputDirectory>")).add(literal("$")).add(literal("{project.build.directory}/")).add(mark("classpathPrefix")).add(literal("</outputDirectory>"))).add(literal("\n\t\t\t\t\t\t    <includeScope>runtime</includeScope>\n\t\t\t\t\t\t\t<overWriteReleases>false</overWriteReleases>\n\t\t\t\t\t\t\t<overWriteSnapshots>false</overWriteSnapshots>\n\t\t\t\t\t\t\t<overWriteIfNewer>true</overWriteIfNewer>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t\t</plugin>\n\t\t\t")).add(expression().add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.codehaus.mojo</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>build-helper-maven-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>1.9.1</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>add-source</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<phase>generate-sources</phase>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>add-source</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t")).add(mark("sourceDirectory").multiple("\n")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t")).add(mark("moduleDependency").multiple("\n")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t</sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>add-test-source</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<phase>generate-test-sources</phase>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>add-test-source</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t<source>test-gen</source>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t")).add(mark("testModuleDependency").multiple("\n")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t</sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>"))).add(literal("\n\t\t\t")).add(expression().add(mark("attachSources")).add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-source-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>3.0.1</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>attach-sources</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>jar-no-fork</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(expression().add(mark("attachJavaDoc")).add(literal("<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>2.9.1</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>attach-javadocs</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>jar</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(expression().add(mark("osx")).add(literal("\n")).add(literal("\t        "))).add(expression().add(mark("windows")).add(literal("\n")).add(literal("            "))).add(literal("\n\t\t</plugins>\n\t</build>\n\n\n\t<repositories>\n\t\t")).add(mark("repository", "release").multiple("\n")).add(literal("\n\t</repositories>\n\n\t<distributionManagement>\n\t\t")).add(mark("repository", "distribution").multiple("\n")).add(literal("\n\t</distributionManagement>\n\n\t<dependencies>\n\t\t")).add(mark("dependency").multiple("\n")).add(literal("\n\t\t<dependency>\n            <groupId>com.sun.xml.security</groupId>\n            <artifactId>xml-security-impl</artifactId>\n            <version>1.0</version>\n        </dependency>\n\t</dependencies>\n</project>")),
			rule().add((condition("trigger", "sourceDirectory"))).add(literal("<source>")).add(mark("value")).add(literal("</source>")),
			rule().add((condition("trigger", "testModuleDependency"))).add(literal("<source>")).add(mark("value")).add(literal("</source>")),
			rule().add((condition("trigger", "moduleDependency"))).add(literal("<source>")).add(mark("value")).add(literal("</source>")),
			rule().add((condition("trigger", "resourceDirectory"))).add(literal("<resource><directory>")).add(mark("value")).add(literal("</directory></resource>")),
			rule().add((condition("trigger", "resourceTestDirectory"))).add(literal("<testResource><directory>")).add(mark("value")).add(literal("</directory></testResource>")),
			rule().add((condition("type", "repository")), (condition("type", "Distribution")), (condition("trigger", "distribution"))).add(literal("<repository>\n\t<id>")).add(mark("name")).add(literal("</id>\n\t<name>")).add(mark("name")).add(literal("</name>\n\t<url>")).add(mark("url")).add(literal("</url>\n</repository>")),
			rule().add((condition("trigger", "distribution"))),
			rule().add((condition("type", "repository")), not(condition("type", "Distribution")), (condition("trigger", "release"))).add(literal("<repository>\n\t<id>")).add(mark("name")).add(literal("-")).add(mark("random")).add(literal("</id>\n\t<url>")).add(mark("url")).add(literal("</url>\n</repository>")),
			rule().add((condition("trigger", "parameter"))).add(literal("<")).add(mark("key")).add(literal(">")).add(mark("value")).add(literal("</")).add(mark("key")).add(literal(">")),
			rule().add((condition("type", "dependency")), (condition("trigger", "dependency"))).add(literal("<dependency>\n\t<groupId>")).add(mark("groupId")).add(literal("</groupId>\n\t<artifactId>")).add(mark("artifactId")).add(literal("</artifactId>\n\t<scope>")).add(mark("scope", "lowercase")).add(literal("</scope>\n\t<version>")).add(mark("version")).add(literal("</version>")).add(expression().add(literal("\n")).add(literal("    <exclusions>")).add(literal("\n")).add(literal("\t    ")).add(mark("exclusion").multiple("\n")).add(literal("\n")).add(literal("    </exclusions>"))).add(literal("\n</dependency>")),
			rule().add((condition("trigger", "exclusion"))).add(literal("<exclusion>\n    <groupId>")).add(mark("groupId")).add(literal("</groupId>\n    <artifactId>")).add(mark("artifactId")).add(literal("</artifactId>\n</exclusion>")),
			rule().add((condition("type", "GPL")), (condition("trigger", "license"))).add(literal("<license>\n\t<name>The GNU General Public License v3.0</name>\n\t<url>https://www.gnu.org/licenses/gpl-3.0.txt</url>\n</license>")),
			rule().add((condition("type", "BSD")), (condition("trigger", "license"))).add(literal("<license>\n\t<name>BSD 3-Clause License</name>\n\t<url>https://opensource.org/licenses/BSD-3-Clause</url>\n</license>")),
			rule().add((condition("trigger", "osx"))).add(literal("<plugin>\n    <groupId>sh.tak.appbundler</groupId>\n    <artifactId>appbundle-maven-plugin</artifactId>\n    <version>1.2.0</version>\n    <configuration>\n        <mainClass>")).add(mark("mainClass")).add(literal("</mainClass>\n        ")).add(expression().add(literal("<iconFile>")).add(mark("icon")).add(literal("</iconFile>"))).add(literal("\n        <jvmVersion>1.8+</jvmVersion>\n    </configuration>\n    <executions>\n        <execution>\n            <phase>package</phase>\n            <goals>\n                <goal>bundle</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>")),
			rule().add((condition("trigger", "windows"))).add(literal("<plugin>\n    <groupId>com.akathist.maven.plugins.launch4j</groupId>\n    <artifactId>launch4j-maven-plugin</artifactId>\n    <executions>\n        <execution>\n        <id>l4j-clui</id>\n        <phase>package</phase>\n        <goals><goal>launch4j</goal></goals>\n            <configuration>\n                <headerType>console</headerType>\n                <outfile>")).add(mark("out")).add(literal("${project.build.finalName}.exe</outfile>\n                <icon>")).add(mark("icon")).add(literal("</icon>\n                <jar>")).add(mark("out")).add(mark("name", "lowercase")).add(literal("/")).add(mark("name", "lowercase")).add(literal("-")).add(mark("version")).add(literal(".jar</jar>\n                <errTitle>")).add(mark("name")).add(literal("</errTitle>\n                <classPath>\n                    <mainClass>")).add(mark("mainClass")).add(literal("</mainClass>\n                    <addDependencies>true</addDependencies>\n                    <jarLocation>")).add(mark("prefix")).add(literal("</jarLocation>\n                </classPath>\n                <jre>\n                    <minVersion>1.8.0</minVersion>\n                    <opts>\n                        <opt>-Djava.endorsed.dirs=./endorsed</opt>\n                    </opts>\n                </jre>\n                <versionInfo>\n                    <fileVersion>")).add(mark("version")).add(literal(".0</fileVersion>\n                    <txtFileVersion>text</txtFileVersion>\n                    <fileDescription>text</fileDescription>\n                    <copyright>text</copyright>\n                    <productVersion>")).add(mark("version")).add(literal(".0</productVersion>\n                    <txtProductVersion>text</txtProductVersion>\n                    <productName>")).add(mark("name")).add(literal("</productName>\n                    <internalName>")).add(mark("name")).add(literal("</internalName>\n                    <originalFilename>")).add(mark("name")).add(literal(".exe</originalFilename>\n                </versionInfo>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>"))
		);
		return this;
	}
}