package io.intino.legio.plugin.build;

import org.siani.itrules.LineSeparator;
import org.siani.itrules.Template;

import java.util.Locale;

import static org.siani.itrules.LineSeparator.LF;

public class PomTemplate extends Template {

	protected PomTemplate(Locale locale, LineSeparator separator) {
		super(locale, separator);
	}

	public static Template create() {
		return new PomTemplate(Locale.ENGLISH, LF).define();
	}

	public Template define() {
		add(
				rule().add((condition("type", "pom"))).add(literal("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\t\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>")).add(mark("groupId", "lowercase")).add(literal("</groupId>\n\t<artifactId>")).add(mark("artifactId", "lowercase")).add(literal("</artifactId>\n\t<version>")).add(mark("version")).add(literal("</version>\n\t")).add(expression().add(literal("<licenses>")).add(literal("\n")).add(literal("\t\t")).add(mark("license").multiple("\n")).add(literal("\n")).add(literal("\t</licenses>"))).add(literal("\n\n\t<properties>\n\t\t<maven.compiler.source>1.8</maven.compiler.source>\n\t\t<maven.compiler.target>1.8</maven.compiler.target>\n\t\t")).add(expression().add(literal("<project.build.sourceEncoding>")).add(mark("encoding")).add(literal("</project.build.sourceEncoding>"))).add(literal("\n\t</properties>\n\n\t<build>\n\t\t<testSourceDirectory>test</testSourceDirectory>\n\t\t<outputDirectory>")).add(mark("outDirectory")).add(literal("</outputDirectory>\n\t\t<testOutputDirectory>")).add(mark("testOutDirectory")).add(literal("</testOutputDirectory>\n\t\t<directory>")).add(mark("buildDirectory")).add(mark("artifactId", "lowercase")).add(literal("</directory>\n\t\t<resources>\n\t\t\t")).add(mark("resourceDirectory")).add(literal("\n\t\t</resources>\n\t\t<plugins>")).add(expression().add(literal("\n")).add(literal("\t\t\t")).add(mark("extractedLibraries")).add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-shade-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>2.4.3</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t<phase>package</phase>")).add(literal("\n")).add(literal("\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t<goal>shade</goal>")).add(literal("\n")).add(literal("\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t<configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t<artifactSet>")).add(literal("\n")).add(literal("\t\t\t\t\t<excludes>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<exclude>junit:junit</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<exclude>jmock:*</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<exclude>org.apache.maven:lib:tests</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t</excludes>")).add(literal("\n")).add(literal("\t\t\t\t  </artifactSet>")).add(literal("\n")).add(literal("\t\t\t\t<filter>")).add(literal("\n")).add(literal("\t\t\t\t\t<excludes>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<exclude>META-INF/*</exclude>")).add(literal("\n")).add(literal("\t\t\t\t\t</excludes>")).add(literal("\n")).add(literal("\t\t\t\t</filter>")).add(literal("\n")).add(literal("\t\t\t\t</configuration>")).add(literal("\n")).add(literal("\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(literal("<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t<version>2.6</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t")).add(expression().add(literal("<finalName>")).add(mark("finalName")).add(literal("</finalName>"))).add(literal("\n\t\t\t\t\t<archive>\n\t\t\t\t\t\t<manifest>\n\t\t\t\t\t\t\t<addClasspath>")).add(expression().add(mark("linkLibraries")).or(expression().add(literal("false")))).add(literal("</addClasspath>")).add(expression().add(literal("\n")).add(literal("\t\t\t\t\t\t\t<mainClass>")).add(mark("mainClass")).add(literal("</mainClass>"))).add(literal("\n\t\t\t\t\t\t</manifest>\n\t\t\t\t\t</archive>\n\t\t\t\t</configuration>\n\t\t\t</plugin>")).add(expression().add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.codehaus.mojo</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>build-helper-maven-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>1.7</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>add-source</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<phase>generate-sources</phase>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>add-source</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t")).add(mark("sourceDirectory").multiple("\n")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t\t")).add(mark("moduleDependency").multiple("\n")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t</sources>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</configuration>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>"))).add(literal("\n\t\t\t")).add(expression().add(mark("attachSources")).add(literal("\n")).add(literal("\t\t\t<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-source-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>attach-sources</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>jar-no-fork</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(expression().add(mark("attachJavaDoc")).add(literal("<plugin>")).add(literal("\n")).add(literal("\t\t\t\t<groupId>org.apache.maven.plugins</groupId>")).add(literal("\n")).add(literal("\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>")).add(literal("\n")).add(literal("\t\t\t\t<version>2.9.1</version>")).add(literal("\n")).add(literal("\t\t\t\t<executions>")).add(literal("\n")).add(literal("\t\t\t\t\t<execution>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<id>attach-javadocs</id>")).add(literal("\n")).add(literal("\t\t\t\t\t\t<goals>")).add(literal("\n")).add(literal("\t\t\t\t\t\t\t<goal>jar</goal>")).add(literal("\n")).add(literal("\t\t\t\t\t\t</goals>")).add(literal("\n")).add(literal("\t\t\t\t\t</execution>")).add(literal("\n")).add(literal("\t\t\t\t</executions>")).add(literal("\n")).add(literal("\t\t\t\t</plugin>")).add(literal("\n")).add(literal("\t\t\t"))).add(literal("\n\t\t</plugins>\n\t</build>\n\n\n\t<repositories>\n\t\t")).add(mark("repository", "release").multiple("\n")).add(literal("\n\t</repositories>\n\n\t<distributionManagement>\n\t\t")).add(mark("repository", "distribution").multiple("\n")).add(literal("\n\t</distributionManagement>\n\n\t<dependencies>\n\t\t")).add(mark("dependency").multiple("\n")).add(literal("\n\t\t<dependency>\n\t\t\t<groupId>com.sun.xml.security</groupId>\n\t\t\t<artifactId>xml-security-impl</artifactId>\n\t\t\t<version>1.0</version>\n\t\t</dependency>\n\t</dependencies>\n</project>")),
				rule().add((condition("trigger", "sourceDirectory"))).add(literal("<sourceDirectory>")).add(mark("value")).add(literal("</sourceDirectory>")),
				rule().add((condition("trigger", "resourceDirectory"))).add(literal("<resource><directory>")).add(mark("value")).add(literal("</directory></resource>")),
			rule().add((condition("type", "moduleDependency"))).add(literal("<source>")).add(mark("url")).add(literal("</source>")),
			rule().add((condition("type", "repository")), (condition("type", "Distribution")), (condition("trigger", "distribution"))).add(literal("<repository>\n\t<id>")).add(mark("name")).add(literal("</id>\n\t<name>")).add(mark("name")).add(literal("</name>\n\t<url>")).add(mark("url")).add(literal("</url>\n</repository>")),
			rule().add((condition("trigger", "distribution"))),
			rule().add((condition("type", "repository")), not(condition("type", "Distribution")), (condition("trigger", "release"))).add(literal("<repository>\n\t<id>")).add(mark("name")).add(literal("</id>\n\t<name>")).add(mark("name")).add(literal("-")).add(mark("type")).add(literal("</name>\n\t<url>")).add(mark("url")).add(literal("</url>\n</repository>")),
				rule().add((condition("type", "dependency")), (condition("trigger", "dependency"))).add(literal("<dependency>\n\t<groupId>")).add(mark("groupId")).add(literal("</groupId>\n\t<artifactId>")).add(mark("artifactId")).add(literal("</artifactId>\n\t<scope>")).add(mark("scope", "lowercase")).add(literal("</scope>\n\t<version>")).add(mark("version")).add(literal("</version>\n</dependency>")),
				rule().add((condition("type", "GPL")), (condition("trigger", "license"))).add(literal("<license>\n\t<name>The GNU General Public License v3.0</name>\n\t<url>https://www.gnu.org/licenses/gpl-3.0.txt</url>\n</license>")),
				rule().add((condition("type", "BSD")), (condition("trigger", "license"))).add(literal("<license>\n\t<name>BSD 3-Clause License</name>\n\t<url>https://opensource.org/licenses/BSD-3-Clause</url>\n</license>"))
		);
		return this;
	}
}